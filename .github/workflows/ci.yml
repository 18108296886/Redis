name: CI

on: [push, pull_request]

jobs:

  test-ubuntu-latest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: make
      # Fail build if there are warnings
      # build with TLS just for compilation coverage
      run: make REDIS_CFLAGS='-Werror' BUILD_TLS=yes
    - name: test
      run: |
        sudo apt-get install tcl8.6 tclx
        ./runtest --verbose --tags -slow --dump-logs
    - name: module api test
      run: ./runtest-moduleapi --verbose --dump-logs

  test-sanitizer-address:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: make
        # build with TLS module just for compilation coverage
        run: make SANITIZER=address REDIS_CFLAGS='-Werror' BUILD_TLS=module
      - name: testprep
        run: sudo apt-get install tcl8.6 tclx -y
      - name: test
        run: ./runtest --verbose --tags -slow --dump-logs
      - name: module api test
        run: ./runtest-moduleapi --verbose --dump-logs

  build-debian-old:
    runs-on: ubuntu-latest
    container: debian:oldoldstable
    steps:
    - uses: actions/checkout@v3
    - name: make
      run: |
        apt-get update && apt-get install -y build-essential
        make REDIS_CFLAGS='-Werror'

  build-macos-latest:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: make
      run: make REDIS_CFLAGS='-Werror'

  build-32bit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: make
      run: |
        sudo apt-get update && sudo apt-get install libc6-dev-i386
        make REDIS_CFLAGS='-Werror' 32bit

  build-libc-malloc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: make
      run: make REDIS_CFLAGS='-Werror' MALLOC=libc

  build-centos7-jemalloc:
    runs-on: ubuntu-latest
    container: centos:7
    steps:
    - uses: actions/checkout@v3
    - name: make
      run: |
        yum -y install gcc make
        make REDIS_CFLAGS='-Werror'

  test-ubuntu-reclaim-cache:
    runs-on: ubuntu-latest
    timeout-minutes: 14400
    steps:
    - name: prep
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "GITHUB_REPOSITORY=${{github.event.inputs.use_repo}}" >> $GITHUB_ENV
        echo "GITHUB_HEAD_REF=${{github.event.inputs.use_git_ref}}" >> $GITHUB_ENV
    - uses: actions/checkout@v3
      with:
        repository: ${{ env.GITHUB_REPOSITORY }}
        ref: ${{ env.GITHUB_HEAD_REF }}
    - name: make
      run: |
        make REDIS_CFLAGS='-Werror'
    - name: testprep
      run: |
        sudo apt-get install vmtouch
        mkdir /tmp/master
        mkdir /tmp/slave
    - name: warm up
      run: |
        ./src/redis-server --daemonize yes --logfile /dev/null
        ./src/redis-benchmark -n 1 > /dev/null
        ./src/redis-cli save | grep OK > /dev/null
        vmtouch -v ./dump.rdb > /dev/null
    - name: test
      run: |
        echo "test SAVE doesn't increase cache"
        CACHE0=$(grep -w file /sys/fs/cgroup/memory.stat | awk '{print $2}')
        ./src/redis-server --daemonize yes --logfile /dev/null --dir /tmp/master --port 8080 --repl-diskless-sync no --pidfile /tmp/master/redis.pid --rdbcompression no
        ./src/redis-cli -p 8080 debug populate 10000 k 102400
        ./src/redis-server --daemonize yes --logfile /dev/null --dir /tmp/slave --port 8081 --repl-diskless-load disabled --rdbcompression no
        ./src/redis-cli -p 8080 save > /dev/null
        VMOUT=$(vmtouch -v /tmp/master/dump.rdb)
        echo $VMOUT
        grep -q "0%" <<< $VMOUT
        CACHE=$(grep -w file /sys/fs/cgroup/memory.stat | awk '{print $2}')
        if [ "$(( $CACHE-$CACHE0 ))" -gt "500000" ]; then echo "$CACHE0 $CACHE"; exit 1; fi

        echo "test replication doesn't increase cache"
        ./src/redis-cli -p 8081 REPLICAOF 127.0.0.1 8080 > /dev/null
        while [ $(./src/redis-cli -p 8081 info replication | grep "master_link_status:down") ]; do sleep 1; done;
        sleep 1 # wait for the completion of cache reclaim bio
        VMOUT=$(vmtouch -v /tmp/master/dump.rdb)
        echo $VMOUT
        grep -q "0%" <<< $VMOUT
        VMOUT=$(vmtouch -v /tmp/slave/dump.rdb)
        echo $VMOUT
        grep -q "0%" <<< $VMOUT
        CACHE=$(grep -w file /sys/fs/cgroup/memory.stat | awk '{print $2}')
        if [ "$(( $CACHE-$CACHE0 ))" -gt "500000" ]; then echo "$CACHE0 $CACHE"; exit 1; fi

        echo "test reboot doesn't increase cache"
        PID=$(cat /tmp/master/redis.pid)
        kill -15 $PID
        while [ -x /proc/${PID} ]; do sleep 1; done
        ./src/redis-server --daemonize yes --logfile /dev/null --dir /tmp/master --port 8080
        while [ $(./src/redis-cli -p 8080 info persistence | grep "loading:1") ]; do sleep 1; done;
        sleep 1 # wait for the completion of cache reclaim bio
        VMOUT=$(vmtouch -v /tmp/master/dump.rdb)
        echo $VMOUT
        grep -q "0%" <<< $VMOUT
        CACHE=$(grep -w file /sys/fs/cgroup/memory.stat | awk '{print $2}')
        if [ "$(( $CACHE-$CACHE0 ))" -gt "500000" ]; then echo "$CACHE0 $CACHE"; exit 1; fi
